function explainTiming() {
  console.log('‚è∞ TIMING DO SISTEMA DE LEMBRETES DE MANUTEN√á√ÉO');
  console.log('='.repeat(60));
  
  console.log('\nüìã CONFIGURA√á√ÉO ATUAL:');
  console.log('   Cron Expression: 0 9 * * * (Todo dia √†s 9:00)');
  console.log('   Timezone: America/Sao_Paulo');
  console.log('   Ambiente: Development');
  console.log('   Enabled: true');
  
  console.log('\nüïê QUANDO O SISTEMA EXECUTA:');
  console.log('   1. AUTOM√ÅTICO: Todo dia √†s 09:00 (hor√°rio de Bras√≠lia)');
  console.log('   2. MANUAL: Via API POST /api/jobs/cron/trigger');
  console.log('   3. STARTUP: Uma vez ao iniciar em modo development');
  
  const now = new Date();
  const nextRun = new Date();
  nextRun.setDate(nextRun.getDate() + 1);
  nextRun.setHours(9, 0, 0, 0);
  
  if (now.getHours() >= 9) {
    // Se j√° passou das 9h hoje, pr√≥xima execu√ß√£o √© amanh√£
    console.log('\nüìÖ PR√ìXIMA EXECU√á√ÉO AUTOM√ÅTICA:');
    console.log(`   Data: ${nextRun.toLocaleDateString('pt-BR')}`);
    console.log(`   Hora: ${nextRun.toLocaleTimeString('pt-BR')}`);
    
    const hoursUntil = Math.ceil((nextRun.getTime() - now.getTime()) / (1000 * 60 * 60));
    console.log(`   Em: ${hoursUntil} horas`);
  } else {
    // Ainda n√£o passou das 9h hoje
    const todayRun = new Date();
    todayRun.setHours(9, 0, 0, 0);
    
    console.log('\nüìÖ PR√ìXIMA EXECU√á√ÉO AUTOM√ÅTICA:');
    console.log(`   Data: HOJE ${todayRun.toLocaleDateString('pt-BR')}`);
    console.log(`   Hora: ${todayRun.toLocaleTimeString('pt-BR')}`);
    
    const hoursUntil = Math.ceil((todayRun.getTime() - now.getTime()) / (1000 * 60 * 60));
    console.log(`   Em: ${hoursUntil} horas`);
  }
  
  console.log('\nüöÄ PARA TESTE IMEDIATO:');
  console.log('   curl -X POST http://localhost:3001/api/jobs/cron/trigger');
  console.log('   ‚Ü≥ Executa AGORA (n√£o precisa esperar √†s 9h)');
  
  console.log('\nüìß L√ìGICA DE ENVIO:');
  console.log('   ‚úÖ Envia IMEDIATO: Se data do lembrete j√° passou');
  console.log('   ‚è∞ Agenda: Se data do lembrete √© futura');
  console.log('   üö´ Pula: Se j√° enviou lembrete para esta manuten√ß√£o');
  
  console.log('\nüí° EXEMPLO PR√ÅTICO:');
  console.log('   - Voc√™ cria manuten√ß√£o para 30/07 com lembrete 2 dias antes');
  console.log('   - Sistema deveria enviar em 28/07');
  console.log('   - Se hoje √© 28/07 ou depois: ENVIA IMEDIATO');
  console.log('   - Se hoje √© 27/07: AGENDA para amanh√£');
  
  console.log('\n‚öôÔ∏è CONFIGURA√á√ïES PERSONALIZ√ÅVEIS:');
  console.log('   MAINTENANCE_REMINDER_CRON=0 9 * * * (no .env)');
  console.log('   ‚Ü≥ Para mudar hor√°rio: 0 14 * * * (14:00 todo dia)');
  console.log('   ‚Ü≥ Para cada 6 horas: 0 */6 * * * (6h, 12h, 18h, 0h)');
  console.log('   ‚Ü≥ Para apenas dias √∫teis: 0 9 * * 1-5 (seg-sex)');
}

explainTiming();